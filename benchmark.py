from pprint import pprint
from keras.models import Sequential
from keras.layers import Conv2D, MaxPool2D, Dense, Flatten
from keras.utils import to_categorical
from keras.datasets import mnist

def load_mnist():
    (xtrain, ytrain), (xtest, ytest) = mnist.load_data()
    xtrain = xtrain.reshape([len(xtrain), 28, 28, 1]) / 255
    xtest = xtest.reshape([len(xtest), 28, 28, 1]) / 255
    ytrain = to_categorical(ytrain, 10)
    ytest = to_categorical(ytest, 10)

    return xtrain, ytrain, xtest, ytest

def load_model_CNN():
    model = Sequential()
    model.add(Conv2D(32, (3,3), input_shape=[28,28,1], activation='relu'))
    model.add(Conv2D(64, (3,3), activation='relu'))
    model.add(Conv2D(128, (3,3), activation='relu'))
    model.add(MaxPool2D(pool_size=(2,2)))
    model.add(Flatten())
    model.add(Dense(256, activation='relu'))
    model.add(Dense(10, activation='softmax'))
    model.compile(loss="categorical_crossentropy", optimizer="adam", metrics=['accuracy'])
    model.summary()

    return model

def train_model(model, xtrain, ytrain, xtest, ytest):
	model = load_model_CNN()
	hist = model.fit(xtrain, ytrain, epochs=10, batch_size=64, validation_data=(xtest, ytest), verbose=1)
	# Accuracy: 99.18
	return model, hist.__dict__

'''
{'epoch': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
 'history': {'acc': [0.9666166666666667,
                     0.9895166666666667,
                     0.99335,
                     0.9949833333333333,
                     0.99615,
                     0.9971,
                     0.9974166666666666,
                     0.9984,
                     0.9972666666666666,
                     0.9987166666666667],
             'loss': [0.108916688661774,
                      0.03386445835387955,
                      0.021306745798140764,
                      0.015177141468280267,
                      0.011964053573479275,
                      0.009144671563240505,
                      0.008035377016438482,
                      0.005480858281660615,
                      0.007741245645809795,
                      0.004262406328026994],
             'val_acc': [0.9841,
                         0.9877,
                         0.9889,
                         0.9914,
                         0.9916,
                         0.9915,
                         0.9917,
                         0.9897,
                         0.9912,
                         0.9918],
             'val_loss': [0.047292107886448505,
                          0.03856558406958357,
                          0.03349351850247476,
                          0.03131097559107584,
                          0.03162611019980322,
                          0.035305207569698176,
                          0.03414389496311041,
                          0.04441371808025783,
                          0.03871596997746965,
                          0.03808313591502192]},
 'model': <keras.models.Sequential object at 0x1023f7e48>,
 'params': {'batch_size': 64,
            'do_validation': True,
            'epochs': 10,
            'metrics': ['loss', 'acc', 'val_loss', 'val_acc'],
            'samples': 60000,
            'steps': None,
            'verbose': 1},
 'validation_data': [array([[[[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        ...,

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]]],


       [[[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        ...,

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]]],


       [[[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        ...,

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]]],


       ...,


       [[[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        ...,

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]]],


       [[[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        ...,

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]]],


       [[[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        ...,

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]],

        [[0.],
         [0.],
         [0.],
         ...,
         [0.],
         [0.],
         [0.]]]]),
                     array([[0., 0., 0., ..., 1., 0.,0.],
       [0., 0., 1., ..., 0., 0., 0.],
       [0., 1., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]]),
                     array([1., 1., 1., ..., 1., 1., 1.], dtype=float32)]}
'''